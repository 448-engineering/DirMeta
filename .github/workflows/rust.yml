name: Rust

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_ubuntu:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run formatter
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Install cargo deny
      run: cargo install cargo-deny
    - name: Run license checks
      run: cargo deny check licenses
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  build_windows:

    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run formatter
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Install cargo deny
      run: cargo install cargo-deny
    - name: Run license checks
      run: cargo deny check licenses
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose

  build_macos:

    runs-on: macos-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run formatter
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Install cargo deny
      run: cargo install cargo-deny
    - name: Run license checks
      run: cargo deny check licenses
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
      
  build_debian:

    runs-on: debian-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run formatter
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Install cargo deny
      run: cargo install cargo-deny
    - name: Run license checks
      run: cargo deny check licenses
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose
      
  build_archlinux:

    runs-on: archlinux-latest

    steps:
    - uses: actions/checkout@v3
    - name: Run formatter
      run: cargo fmt --all -- --config format_code_in_doc_comments=true --check
    - name: Run Clippy
      run: cargo clippy --all-targets --all-features -- -D warnings
    - name: Install cargo deny
      run: cargo install cargo-deny
    - name: Run license checks
      run: cargo deny check licenses
    - name: Build
      run: cargo build --verbose
    - name: Run tests
      run: cargo test --verbose


